# Nimbus
# Copyright (c) 2020-2025 Status Research & Development GmbH
# Licensed under either of
#  * Apache License, version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or
#    http://www.apache.org/licenses/LICENSE-2.0)
#  * MIT license ([LICENSE-MIT](LICENSE-MIT) or
#    http://opensource.org/licenses/MIT)
# at your option. This file may not be copied, modified, or distributed except
# according to those terms.

name: Nimbus CI
on:
  push:
    branches:
      - master
    paths-ignore:
      - 'doc/**'
      - 'portal/docs/**'
      - '**/*.md'
      - 'hive_integration/**'
      - 'nimbus_verified_proxy/**'
      - '.github/workflows/nimbus_verified_proxy.yml'
      - '.github/workflows/build_base_image.yml'
      - 'docker/**'
      - 'metrics/**'

  pull_request:
    paths-ignore:
      - 'doc/**'
      - 'portal/docs/**'
      - '**/*.md'
      - 'hive_integration/**'
      - 'nimbus_verified_proxy/**'
      - '.github/workflows/nimbus_verified_proxy.yml'
      - '.github/workflows/build_base_image.yml'
      - 'docker/**'
      - 'metrics/**'

  workflow_dispatch:

concurrency: # Cancel stale PR builds (but not push builds)
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  matrix_config:
    uses: ./.github/workflows/matrix_config.yml

  build:
    needs: matrix_config

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.matrix_config.outputs.matrix) }}

    defaults:
      run:
        shell: bash

    name: '${{ matrix.os }}-${{ matrix.cpu }}'
    runs-on: ${{ matrix.builder }}
    steps:
      - name: Checkout nimbus-eth1
        uses: actions/checkout@v4

      - id: shared-action
        uses: ./.github/actions/shared
        with:
          llvm-mingw: true
          nim-cache: true
          rocksdb-cache: true
          eest-cache: true

      - name: Run nimbus-eth1 tests
        run: |
          gcc --version
          #export ZERO_AR_DATE=1 # avoid timestamps in binaries
          DEFAULT_MAKE_FLAGS="-j${ncpu} ROCKSDB_CI_CACHE=RocksBinCache"
          make ${DEFAULT_MAKE_FLAGS} all test_import build_fuzzers check_revision
          # clear some space
          find . -type d -name "nimcache" -exec rm -rf {} +
          # "-static" option will not work for osx unless static system libraries are provided
          make ${DEFAULT_MAKE_FLAGS} test t8n_test eest_full_test
